plot(BA~Age, mlb, xlim = c(18,55), ylim = c(0,.4),
main = "Quad (red) and Mixed Mod (blue)",
ylab = "BA",
xlab = "Age")
lines(ages, quad.mod.fun(ages), col='red', type='l')
lines(ages, mixed.mod.fun(ages), col='cornflowerblue', type='l')
legend("topright", pch=c('l','l'), col = c('red', 'cornflowerblue'), c("Quad (OLS)", "Mixed"))
max(quad.mod.fun(ages))
which.max(quad.mod.fun(ages))
max(mixed.mod.fun(ages))
which.max(mixed.mod.fun(ages))
print("Peak for OLS/Quad model")
max(quad.mod.fun(ages))
which.max(quad.mod.fun(ages)) + 18
print("Peak for Mixed model")
max(mixed.mod.fun(ages))
which.max(mixed.mod.fun(ages)) + 18
print("Peak for OLS/Quad model")
max(quad.mod.fun(ages))
which.max(quad.mod.fun(ages)) + 17
print("Peak for Mixed model")
max(mixed.mod.fun(ages))
which.max(mixed.mod.fun(ages)) + 17
yhat.rf1
yhats
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
lines(yhat.rf1~dummyx,col="red",lwd=2)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
lines(yhat.rf1~dummyx,col="red",lwd=2)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
dummy_df = data_no_county
min(data_no_county$inactivity)
max(data_no_county$inactivity)
dummyx = seq(8,42,1)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
yhats=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:nrow(dummy_df)){
rows=dummy_df[rep(i,length(dummyx)),]
rows$inactivity=dummyx
yhat =predict(rf,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.08),lwd=1,lty=1)
yhats[i,]=yhat
}
dummy_df = data_no_county
min(data_no_county$inactivity)
max(data_no_county$inactivity)
dummyx = seq(8,42,1)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
yhats=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:12){
rows=dummy_df[rep(i,length(dummyx)),]
rows$inactivity=dummyx
yhat =predict(rf,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.08),lwd=1,lty=1)
yhats[i,]=yhat
}
mean_yhat =apply(yhats,2,mean)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
dummy_df = data_no_county
min(data_no_county$inactivity)
max(data_no_county$inactivity)
dummyx = seq(8,42,1)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
yhats=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:12){
rows=dummy_df[rep(i,length(dummyx)),]
rows$inactivity=dummyx
yhat =predict(rf,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.08),lwd=1,lty=1)
yhats[i,]=yhat
}
mean_yhat =apply(yhats,2,mean)
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
lines(yhat.rf1~dummyx,col="red",lwd=2)
yhat.rf <- predict(rf,dummy_df)
lines(yhat.rf1~dummyx,col="red",lwd=2)
dummy_df = data_no_county
min(data_no_county$inactivity)
max(data_no_county$inactivity)
dummyx = seq(8,42,1)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
yhats=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:12){
rows=dummy_df[rep(i,length(dummyx)),]
rows$inactivity=dummyx
yhat =predict(rf,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.08),lwd=1,lty=1)
yhats[i,]=yhat
}
mean_yhat =apply(yhats,2,mean)
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
yhat.rf <- predict(rf,dummy_df)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
lines(yhat.rf1~dummyx,col="red",lwd=2)
dummy_df = data_no_county
min(data_no_county$inactivity)
max(data_no_county$inactivity)
dummyx = seq(8,42,1)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
yhats=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:12){
rows=dummy_df[rep(i,length(dummyx)),]
rows$inactivity=dummyx
yhat =predict(rf,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.08),lwd=1,lty=1)
yhats[i,]=yhat
}
mean_yhat =apply(yhats,2,mean)
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
yhat.rf <- predict(rf,dummy_df)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
lines(yhat.rf~dummyx,col="red",lwd=2)
yhat.rf <- predict(rf,dummy_df)
yhat.rf
dummyx
dummy_df = data_no_county
min(data_no_county$inactivity)
max(data_no_county$inactivity)
dummyx = seq(8,42,1)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
yhats=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:12){
rows=dummy_df[rep(i,length(dummyx)),]
rows$inactivity=dummyx
yhat =predict(rf,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.08),lwd=1,lty=1)
yhats[i,]=yhat
}
mean_yhat =apply(yhats,2,mean)
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
yhat.rf <- predict(rf,dummy_df)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
#lines(yhat.rf~dummyx,col="red",lwd=2)
dummy_df = data_no_county
min(data_no_county$inactivity)
max(data_no_county$inactivity)
dummyx = seq(8,42,1)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
yhats=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:12){
rows=dummy_df[rep(i,length(dummyx)),]
rows$inactivity=dummyx
yhat =predict(rf,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.08),lwd=1,lty=1)
yhats[i,]=yhat
}
mean_yhat =apply(yhats,2,mean)
lines(mean_yhat~dummyx,col="red",lwd=3)
yhat.rf <- predict(rf,dummy_df)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
#lines(yhat.rf~dummyx,col="red",lwd=2)
dummy_df = data_no_county
min(data_no_county$inactivity)
max(data_no_county$inactivity)
dummyx = seq(8,42,1)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
yhats=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:12){
rows=dummy_df[rep(i,length(dummyx)),]
rows$inactivity=dummyx
yhat =predict(rf,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.08),lwd=1,lty=1)
yhats[i,]=yhat
}
mean_yhat =apply(yhats,2,mean)
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
yhat.rf <- predict(rf,dummy_df)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
#lines(yhat.rf~dummyx,col="red",lwd=2)
yhat.rf <- predict(rf,dummy_df)
dummy_df = data_no_county
min(data_no_county$inactivity)
max(data_no_county$inactivity)
dummyx = seq(8,42,1)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
yhats=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:12){
rows=dummy_df[rep(i,length(dummyx)),]
rows$inactivity=dummyx
yhat =predict(rf,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.08),lwd=1,lty=1)
yhats[i,]=yhat
}
mean_yhat =apply(yhats,2,mean)
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
yhat.rf <- predict(rf,dummy_df)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
lines(yhat.rf~dummyx,col="red",lwd=2)
yhat.rf
data
dummy_df
dummy_df = data_no_county
min(data_no_county$inactivity)
max(data_no_county$inactivity)
dummyx = seq(8,42,1)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
yhats=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:25){
rows=dummy_df[rep(i,length(dummyx)),]
rows$inactivity=dummyx
yhat =predict(rf,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.08),lwd=1,lty=1)
yhats[i,]=yhat
}
mean_yhat =apply(yhats,2,mean)
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
yhat.rf <- predict(rf,dummy_df)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
yhat.rf <- predict(rf,dummy_df)
yhat.rf
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
lines(yhat.rf~inactivity,col="red",lwd=2)
lines(yhat.rf~dummy_df$inactivity,col="red",lwd=2)
dummy_df = data_no_county
min(data_no_county$inactivity)
max(data_no_county$inactivity)
dummyx = seq(8,42,1)
plot(cancer~inactivity,data=data_no_county,cex=0.8,pch=16,col=rgb(0.2,0.2,0.2,0.5), main = "Cancer Rates vs. Inactivity")
yhats=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:12){
rows=dummy_df[rep(i,length(dummyx)),]
rows$inactivity=dummyx
yhat =predict(rf,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.08),lwd=1,lty=1)
yhats[i,]=yhat
}
mean_yhat =apply(yhats,2,mean)
lines(mean_yhat~dummyx,col=rgb(0,0,0.5,1),lwd=3)
yhat.rf <- predict(rf,dummy_df)
points(predict(rf,data_no_county)~data_no_county$inactivity,col="blue",cex=0.5)
lines(yhat.rf~dummy_df$inactivity,col="red",lwd=2)
data_no_county
varImpPlot(rf,type=2)
# Fit a tree and plot variable importance
cv5 <- trainControl(method="cv", number = 5)
rpart.cv
library(tidyverse)
library(rpart)
library(caret)
library(caret)
data <- read.csv("data/county_level_cancer.csv")
# Remove county and fipscode as they are not useful predictors
data_no_county <-  select (data,-c(county, fipscode))
# Fit a tree and plot variable importance
cv5 <- trainControl(method="cv", number = 5)
rpart.cv <- train(cander ~ ., data = data_no_county,
method="rpart2",
tuneLength = 20,
tuneGrid = depths,
trControl = cv5)
rpart.cv <- train(cancer ~ ., data = data_no_county,
method="rpart2",
tuneLength = 20,
tuneGrid = depths,
trControl = cv5)
depths <- expand.grid(maxdepth = 1:20)
rpart.cv <- train(cancer ~ ., data = data_no_county,
method="rpart2",
tuneLength = 20,
tuneGrid = depths,
trControl = cv5)
rpart.cv
tree.mod <- rpart(cancer~.,data=data_no_county, maxdepth = 8)
tree.mod <- rpart(cancer~.,data=data_no_county, maxdepth = 8)
barplot(tree$variable.importance, horiz=T, las=2, main = "Tree Variable importance")
tree.mod.no_state <- rpart(cancer~.-state,data=data_no_county, maxdepth = 8)
tree.mod.no_state <- rpart(cancer~.-state,data=data_no_county, maxdepth = 8)
barplot(tree.mod.no_state$variable.importance, horiz=T, las=2, main = "Tree Variable importance")
dim(data_no_county)
# Tune maxnodes
maxnodes <- c(10,20,30,40,50,100,200,500)
RMSEs <- rep(NA, length(maxnodes))
set.seed(139)
get_rmse_tree <- function(mod) {
residuals <- predict(mod, new=data_no_county) - df_train_tree$cancer
rmse_train <- sqrt(mean(residuals^2))
}
get_rmse_tree(tree.mod)
residuals <- predict(mod, new=data_no_county) - data_no_county$cancer
get_rmse_tree <- function(mod) {
residuals <- predict(mod, new=data_no_county) - data_no_county$cancer
rmse_train <- sqrt(mean(residuals^2))
}
set.seed(139)
for (node in 1:length(maxnodes)){
tree <- randomForest(cancer ~ .-state, data = data_no_county, ntree=100,
mtry=4,
maxnodes=maxnodes[node])
RMSEs[node] <- get_rmse_tree(tree)$rmse_test
}
set.seed(139)
for (node in 1:length(maxnodes)){
tree <- randomForest(cancer ~ .-state, data = data_no_county, ntree=100,
mtry=4,
maxnodes=maxnodes[node])
RMSEs[node] <- get_rmse_tree(tree)
}
plot(RMSEs~maxnodes, lwd = 2, type = 'l'); abline(v= 50, col = "red")
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 100)
varImpPlot(rf,type=2)
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 1000)
varImpPlot(rf,type=2)
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 10)
varImpPlot(rf,type=2)
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 50)
varImpPlot(rf,type=2)
intercept.mod <- lm(cancer ~ 1, data = data_no_county)
full.mod <- lm(cancer ~ ., data = data_no_county)
forward.step <-step(intercept.mod, scope=formula(full.mod), direction="forward",trace = 0)
summary(bestmodel1)
summary(forward.step)
both.step.mod = step(forward.step,scope=list(lower=formula(interceptmod),upper=formula(interactionmodel)), direction = "both", trace= 0)
both.step.mod = step(forward.step,scope=list(lower=formula(intercept.mod),upper=formula(interaction.mod)), direction = "both", trace= 0)
interaction.mod <- lm(cancer ~ (. - state - county - fipscode) * state, data = cancer)
both.step.mod = step(forward.step,scope=list(lower=formula(intercept.mod),upper=formula(interaction.mod)), direction = "both", trace= 0)
interaction.mod <- lm(cancer ~ (. - state - county - fipscode) * state, data = cancer)
interaction.mod <- lm(cancer ~ (. - state - county - fipscode) * state, data = data_no_county)
interaction.mod <- lm(cancer ~ (. - state) * state, data = data_no_county)
formula(both.step.mod)
both.step.mod = step(forward.step,scope=list(lower=formula(intercept.mod),upper=formula(interaction.mod)), direction = "both", trace= 0)
both.step.mod = step(forward.step,scope=list(lower=formula(intercept.mod),upper=formula(interaction.mod)), direction = "both", trace= 0)
summary(forward.step)
formula(both.step.mod)
formula(both.step.mod)
lm(cancer ~ inactivity, data_no_county)
lm1 <- lm(cancer ~ inactivity, data_no_county)
summary
lm1 <- lm(cancer ~ inactivity, data_no_county)
summary(lm1)
mod.minus.inactivity <- lm(cancer ~ .-inactivity, data_no_county)
anova(mod.minus.inactivity, full.mod)
mod.minus.inactivity <- lm(cancer ~ .-inactivity, data_no_county)
anova(mod.minus.inactivity, full.mod)
# Use mtry = 4 as it is around the sqrt of the number of predictors
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 50)
# Use mtry = 4 as it is around the sqrt of the number of predictors
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 50)
varImpPlot(rf,type=2)
lmer(cancer ~ 1 + inactivity + (1 + . | state), data_no_county)
lmer(cancer ~ 1 + inactivity + (1 + . - state | state), data_no_county)
mixed.mod <- lmer(cancer ~ 1 + inactivity + (1 + . - state | state), data_no_county)
dummyx <- seq(min(data_no_county$inactivity), max(data_no_county$inactivity), 0.1)
dummyx
dummyx <- seq(min(data_no_county$inactivity), max(data_no_county$inactivity), 0.05)
coef.mixed.mod <- summary(mixed.mod)$coef[,1]
coef.mixed.mod
lin.coef <- coef.mixed.mod[2]
int.coef <- coef.mixed.mod[1]
mixed.mod.fun <- function(x) lin.coef * x + int.coef
plot(cancer ~ inactivity, data_no_county)
# Simple OLS model for comparison
simple.ols <- lm(cancer ~ inactivity, data_no_county)
coef(simple.ols)
simple.mod.fun <- function(x) coef(simple.ols)[2] * x + coef(simple.ols)[1]
# Simple OLS model for comparison
simple.ols <- lm(cancer ~ inactivity, data_no_county)
simple.mod.fun <- function(x) coef(simple.ols)[2] * x + coef(simple.ols)[1]
dummy_inactivity <- seq(min(data_no_county$inactivity), max(data_no_county$inactivity), 0.05)
lines(mixed.mod.fun(dummy_inactivity))
plot(cancer ~ inactivity, data_no_county,
# xlim = c(18,55), ylim = c(0,.4),
main = "OLS (red) and Mixed Mod (blue)",
ylab = "Cancer Rate",
xlab = "Inactivity")
lines(mixed.mod.fun(dummy_inactivity))
plot(cancer ~ inactivity, data_no_county,
main = "OLS (red) and Mixed Mod (blue)",
ylab = "Cancer Rate",
xlab = "Inactivity")
lines(mixed.mod.fun(dummy_inactivity))
plot(cancer ~ inactivity, data_no_county,
main = "OLS (red) and Mixed Mod (blue)",
ylab = "Cancer Rate",
xlab = "Inactivity")
lines(mixed.mod.fun(dummy_inactivity))
mixed.mod.fun <- function(x) lin.coef * x + int.coef
mixed.mod.fun(dummy_inactivity)
plot(cancer ~ inactivity, data_no_county,
main = "OLS (red) and Mixed Mod (blue)",
ylab = "Cancer Rate",
xlab = "Inactivity")
mixed.mod
mixed.mod <- lmer(cancer ~ 1 + inactivity + (1 + . - state - cancer | state), data_no_county)
mixed.mod <- lmer(cancer ~ 1 + inactivity + (1 + . - state - cancer | state), data_no_county)
summary(mixed.mod)
coef.mixed.mod <- summary(mixed.mod)$coef[,1]
lin.coef <- coef.mixed.mod[2]
int.coef <- coef.mixed.mod[1]
mixed.mod.fun <- function(x) lin.coef * x + int.coef
# Simple OLS model for comparison
simple.ols <- lm(cancer ~ inactivity, data_no_county)
simple.mod.fun <- function(x) coef(simple.ols)[2] * x + coef(simple.ols)[1]
plot(cancer ~ inactivity, data_no_county,
main = "OLS (red) and Mixed Mod (blue)",
ylab = "Cancer Rate",
xlab = "Inactivity")
lines(dummy_inactivity, mixed.mod.fun(dummy_inactivity))
plot(cancer ~ inactivity, data_no_county,
main = "OLS (red) and Mixed Mod (blue)",
ylab = "Cancer Rate",
xlab = "Inactivity")
lines(dummy_inactivity, mixed.mod.fun(dummy_inactivity))
lines(dummy_inactivity, mixed.mod.fun(dummy_inactivity), col='cornflowerblue')
lines(dummy_inactivity, simple.mod.fun(dummy_inactivity), col='red', type='l')
plot(cancer ~ inactivity, data_no_county,
main = "OLS (red) and Mixed Mod (blue)",
ylab = "Cancer Rate",
xlab = "Inactivity")
lines(dummy_inactivity, simple.mod.fun(dummy_inactivity), col='red', type='l')
lines(dummy_inactivity, mixed.mod.fun(dummy_inactivity), col='cornflowerblue')
legend("topright", pch=c('l','l'), col = c('red', 'cornflowerblue'), c("Quad (OLS)", "Mixed"))
lines(dummy_inactivity, simple.mod.fun(dummy_inactivity), col='red', lwd = 3)
plot(cancer ~ inactivity, data_no_county,
main = "OLS (red) and Mixed Mod (blue)",
ylab = "Cancer Rate",
xlab = "Inactivity")
lines(dummy_inactivity, simple.mod.fun(dummy_inactivity), col='red', lwd = 3)
lines(dummy_inactivity, mixed.mod.fun(dummy_inactivity), col='cornflowerblue')
legend("topright", pch=c('l','l'), col = c('red', 'cornflowerblue'), c("Quad (OLS)", "Mixed"))
plot(cancer ~ inactivity, data_no_county,
main = "OLS (red) and Mixed Mod (blue)",
ylab = "Cancer Rate",
xlab = "Inactivity")
lines(dummy_inactivity, simple.mod.fun(dummy_inactivity), col='red', lwd = 2)
lines(dummy_inactivity, mixed.mod.fun(dummy_inactivity), col='cornflowerblue', lwd = 2)
legend("topright", pch=c('l','l'), col = c('red', 'cornflowerblue'), c("Quad (OLS)", "Mixed"))
jpeg("viz2.jpg", width = 350, height = "350")
jpeg("viz2.jpg", width = 350, height = "350")
jpeg("viz2.jpg", width = 350px, height = "350")
jpeg("viz2.jpg", width = 350, height = "350")
jpeg
jpeg("viz2.jpg", width = 350, height = 350)
jpeg("viz2.jpg", width = 350, height = 350)
plot(cancer ~ inactivity, data_no_county,
main = "OLS (red) and Mixed Mod (blue)",
ylab = "Cancer Rate",
xlab = "Inactivity")
lines(dummy_inactivity, simple.mod.fun(dummy_inactivity), col='red', lwd = 2)
lines(dummy_inactivity, mixed.mod.fun(dummy_inactivity), col='cornflowerblue', lwd = 2)
legend("topright", pch=c('l','l'), col = c('red', 'cornflowerblue'), c("Quad (OLS)", "Mixed"))
dev.off()
# Refit tree pooling across states
# Remove state
tree.mod.no_state <- rpart(cancer~.-state,data=data_no_county, maxdepth = 8)
jpeg("tree_varimp.jpg", width = 350, height = 350)
# Plot variable importance again
barplot(tree.mod.no_state$variable.importance, horiz=T, las=2, main = "Tree Variable importance")
dev.off()
# Use mtry = 4 as it is around the sqrt of the number of predictors
jpeg("rf_varimp.jpg", width = 350, height = 350)
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 50)
varImpPlot(rf,type=2)
dev.off()
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 50)
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 50)
varImpPlot(rf,type=2)
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4)
varImpPlot(rf,type=2)
# Use mtry = 4 as it is around the sqrt of the number of predictors
# Maxnodes set to 50, arbitrarily
jpeg("rf_varimp.jpg", width = 350, height = 350)
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 50)
varImpPlot(rf,type=2)
dev.off()
library(tidyverse)
library(rpart)
library(randomForest)
library(caret)
data <- read.csv("data/county_level_cancer.csv")
# Both of our predictors looks approximately normal, so no transformations are needed - see appendix
# Remove county and fipscode as they are not useful predictors
data_no_county <-  select (data,-c(county, fipscode))
# Fit a tree and plot variable importance
# State is the most important predictor
tree.mod <- rpart(cancer~.,data=data_no_county, maxdepth = 8) # Best maxdepth is 8 - tuning in appendix
barplot(tree.mod$variable.importance, horiz=T, las=2, main = "Tree Variable importance")
jpeg("tree_varimp_state.jpg", width = 350, height = 350)
dev.off()
jpeg("tree_varimp_state.jpg", width = 350, height = 350)
barplot(tree.mod$variable.importance, horiz=T, las=2, main = "Tree Variable importance")
dev.off()
varImpPlot(rf,type=2,main = "Tree Relative Variable importance")
# Use mtry = 4 as it is around the sqrt of the number of predictors
jpeg("rf_varimp.jpg", width = 350, height = 350)
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 50)
varImpPlot(rf,type=2,main = "Tree Relative Variable importance")
dev.off()
# Use mtry = 4 as it is around the sqrt of the number of predictors
jpeg("rf_varimp.jpg", width = 350, height = 350)
rf <- randomForest(cancer~.-state, data=data_no_county, mtry=4, maxnodes = 50)
varImpPlot(rf,type=2,main = "Tree Relative Variable importance")
dev.off()
mixed.mod.noinact <- lmer(cancer ~ 1  + (1 + . - state - cancer - inactivity | state), data_no_county)
mixed.mod.noinact <- lmer(cancer ~ 1  + (1 + . - state - cancer - inactivity | state), data_no_county)
anova(mixed.mod.noinact, mixed.mod)
mixed.mod.noinact <- lmer(cancer ~ (1 + . - state - cancer - inactivity | state), data_no_county)
mixed.mod <- lmer(cancer ~ 1 + inactivity + (1 + . - state - cancer | state), data_no_county)
mixed.mod <- lmer(cancer ~ 1 + inactivity + (1 + . - state - cancer | state), data_no_county)
mixed.mod.noinact <- lmer(cancer ~ (1 + . - state - cancer - inactivity | state), data_no_county)
